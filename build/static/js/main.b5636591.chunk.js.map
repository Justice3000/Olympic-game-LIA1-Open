{"version":3,"sources":["zustand/zStore.tsx","c/Arch.tsx","textures/orbs/Metal_Mesh_008_ambientOcclusion.jpg","textures/orbs/Metal_Mesh_008_basecolor.jpg","textures/orbs/Metal_Mesh_008_height.png","textures/orbs/Metal_Mesh_008_metallic.jpg","textures/orbs/Metal_Mesh_008_normal.jpg","textures/orbs/Metal_Mesh_008_opacity.jpg","textures/orbs/Metal_Mesh_008_roughness.jpg","c/PostProcessing.tsx","c/dom/HUD.tsx","images/pedro.png","c/dom/Menu.tsx","c/dom/Dom.tsx","c/hooks/useKey.tsx","c/Controls.tsx","c/Mist.tsx","textures/floor/floor.png","textures/floor/floor_emissive_map.png","c/Terrain.tsx","c/functions/index.ts","c/Pedro.tsx","c/Walls.tsx","textures/earth/color.jpg","textures/earth/roughness.jpg","textures/earth/clouds.jpg","textures/earth/cloud_displacement.jpg","c/Earth.tsx","c/Dots.tsx","textures/obstacles/secret.png","textures/obstacles/json.png","c/Obstacles.tsx","c/GameLoader.tsx","audio/crispy.mp3","audio/oh_no_sound.mp3","audio/level_up.mp3","audio/THE_END.wav","c/Music.jsx","textures/sky.jpg","c/Environment.tsx","App.tsx","index.tsx","app_config/index.js"],"names":["useStore","create","set","get","tequila","gameOver","gameStarted","loaded","keyPressed","left","right","up","music","pedro","createRef","camera","star","setGameOver","setGameStarted","state","setLoaded","setTequila","setMusic","data","gameSpeed","velocity","targetSpeed","xy","points","level","mountStoreDevtool","Arch","s","arches","useRef","orb1","orb2","orb3","orb4","orb5","orb6","orb7","orb8","orb9","arch1","arch2","arch3","arch4","arch5","arch6","arch7","arch8","arch9","ball1","ball2","ball3","ball4","ball5","ball6","ball7","ball8","ball9","useTexture","ao","baseColor","displacement","metal","normal","opacity","roughness","aoMap","baseColorMap","displacementMap","metalMap","normalMap","opacityMap","roughnessMap","useFrame","delta","current","i","eval","position","z","TERRAIN_SIZE","arch_array","push","ref","rotation","Math","PI","args","fog","attach","color","map","metalnessMap","alphaMap","alphaTest","emissiveIntensity","emissive","ORB_EMISSION_COLOR","emissiveMap","PostProcessing","focusDistance","focalLength","bokehScale","height","luminanceThreshold","eskil","offset","darkness","retrievePoints","retrieveVelocity","retrieveLevel","HUD","point_ref","velocity_ref","level_ref","currentPoints","currentVelocity","currentLevel","useEffect","addEffect","innerHTML","toFixed","toString","innerText","substr","className","Menu","gameLoaded","style","background","MAIN_MENU_BACKGROUND_COLOR","GAME_NAME","alt","src","logo","onClick","GAME_SPEED_START","y","type","Dom","useKey","button","stateDispatch","pressed","_onKeyDown","e","indexOf","key","isHeld","code","_onKeyUp","window","addEventListener","passive","removeEventListener","Controls","dispatch","CONTROL_LEFT","bool","CONTROL_RIGHT","CONTROL_SPEED_UP","Mist","mist","near","far","MIST_COLOR","TerrainModel","g_one","g_two","terrain","terrain_secondary","useState","intensity","setIntensity","texture","floor","texture_emissive_map","floor_emissive","useLayoutEffect","wrapS","wrapT","RepeatWrapping","repeat","TEXTURE_SIZE","anisotropy","terrainCounter","lastTerrain","setTerrainIntoNewPosition","terrain_ref","round","GAME_SPEED_LEVEL_UP","visible","TERRAIN_COLOR","TERRAIN_EMISSIVE_COLOR","metalness","Terrain","lockCamera","object","x","randomWithinRange","min","max","random","limitTurningAngle","current_value","HERO_TURNING_RATE","Model","useGLTF","nodes","materials","animations","controls","getState","subscribe","c","actions","useAnimations","timer","new_timer","clock","getElapsedTime","HUD_UPDATE_RATE","abs","GAME_SPEED_BASE","new_delta","CORRECTIONAL_DELTA","sqrt","OBJECT_TURN_RATE","PIchecker","vel","split","parseInt","animeRun","isRunning","play","run","stop","reset","idle","PerspectiveCamera","makeDefault","fov","dispose","scale","mixamorigHips","geometry","Ch43","material","Ch43_Body","skeleton","Pedro","preload","Walls","rightWall","leftWall","WALL_RADIUS","LEFT_WALL","WALL_COLOR","RIGHT_WALL","Earth","clouds","clouds_color","clouds_displacement","color_map","displacement_map","c_color","earth_color","useMemo","EARTH_EMISSION_COLOR","displacementScale","reflectivity","depthWrite","transparent","side","DoubleSide","Dots","dots","Stars","radius","depth","count","factor","saturation","fade","Obstacles","texture_map","secret_map","earth","obstacle_ref","material_ref","gameOver_flag","obstacle3D","Object3D","obstacles","rotate","obstacle_coords_bank","index","OBSTACLES_QT","FREE_REAL_ESTATE","forEach","o","x1","y1","x2","y2","a","b","getDistance","OBSTACLES_HEIGHT","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","undefined","OBSTACLE_EMISSIVE_COLOR","wireframe","GameLoader","useProgress","progress","item","Html","letter","Music","music_analyzer","music_player","game_over_player","oh_no_player","level_up_player","music_bol","AudioListener","listener","mainTheme","useLoader","AudioLoader","crispy","gameOverTheme","THE_END","ohNoTheme","oh_no_sound","levelUpTheme","level_up_sound","setBuffer","setVolume","setLoop","setPlaybackRate","isPlaying","AudioAnalyser","rate","playbackRate","Environment","fallback","Sky","sky_texture","sky","p","MirroredRepeatWrapping","SKY_MOVEMENT_RATE","ENVIRONMENT_EMISSIVE_COLOR","BackSide","App","zIndex","gl","antialias","alpha","mode","dpr","devicePixelRatio","Stats","CameraShake","Preload","all","ReactDOM","render","StrictMode","document","getElementById","Color"],"mappings":"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","file":"static/js/main.b5636591.chunk.js","sourcesContent":["import { createRef } from \"react\";\nimport create from \"zustand\";\nimport { mountStoreDevtool } from \"simple-zustand-devtools\";\n\nconst useStore = create<GameStoreZ>((set, get) => {\n  return {\n    set,\n    get,\n    tequila: false,\n    gameOver: false,\n    gameStarted: false,\n    loaded: false,\n    keyPressed: {\n      left: false,\n      right: false,\n      up: false,\n    },\n    music: false,\n    pedro: createRef(),\n    camera: createRef(),\n    star: createRef(),\n    setGameOver: (gameOver) => set({ gameOver }),\n    setGameStarted: (gameStarted) => set((state) => ({ gameStarted })),\n    setLoaded: (loaded) => set((state) => ({ loaded })),\n    setTequila: (tequila) => set((state) => ({ tequila })),\n    setMusic: (music) => set((state) => ({ music })),\n  };\n});\n\n//simple object for mutations\nconst data: dataType = {\n  gameSpeed: 0,\n  velocity: 0,\n  targetSpeed: 0, //could be used to create acceleration with delta\n  xy: 0,\n  points: 0,\n  level: 1,\n};\n\nmountStoreDevtool(\"STORE\", useStore as any);\n\nexport { useStore, data };\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { useFrame } from \"@react-three/fiber\";\nimport { useTexture } from \"@react-three/drei\";\nimport { useRef } from \"react\";\nimport { ORB_EMISSION_COLOR, TERRAIN_SIZE } from \"../app_config\";\nimport { useStore } from \"../zustand/zStore\";\nimport ao from \"../textures/orbs/Metal_Mesh_008_ambientOcclusion.jpg\";\nimport baseColor from \"../textures/orbs/Metal_Mesh_008_basecolor.jpg\";\nimport displacement from \"../textures/orbs/Metal_Mesh_008_height.png\";\nimport metal from \"../textures/orbs/Metal_Mesh_008_metallic.jpg\";\nimport normal from \"../textures/orbs/Metal_Mesh_008_normal.jpg\";\nimport opacity from \"../textures/orbs/Metal_Mesh_008_opacity.jpg\";\nimport roughness from \"../textures/orbs/Metal_Mesh_008_roughness.jpg\";\n\nexport function Arch() {\n  const pedro = useStore((s) => s.pedro);\n  const arches = useRef<any>();\n\n  const orb1 = useRef<any>();\n  const orb2 = useRef<any>();\n  const orb3 = useRef<any>();\n  const orb4 = useRef<any>();\n  const orb5 = useRef<any>();\n  const orb6 = useRef<any>();\n  const orb7 = useRef<any>();\n  const orb8 = useRef<any>();\n  const orb9 = useRef<any>();\n\n  const arch1 = useRef<any>();\n  const arch2 = useRef<any>();\n  const arch3 = useRef<any>();\n  const arch4 = useRef<any>();\n  const arch5 = useRef<any>();\n  const arch6 = useRef<any>();\n  const arch7 = useRef<any>();\n  const arch8 = useRef<any>();\n  const arch9 = useRef<any>();\n\n  const ball1 = useRef<any>();\n  const ball2 = useRef<any>();\n  const ball3 = useRef<any>();\n  const ball4 = useRef<any>();\n  const ball5 = useRef<any>();\n  const ball6 = useRef<any>();\n  const ball7 = useRef<any>();\n  const ball8 = useRef<any>();\n  const ball9 = useRef<any>();\n\n  const [\n    aoMap,\n    baseColorMap,\n    displacementMap,\n    metalMap,\n    normalMap,\n    opacityMap,\n    roughnessMap,\n  ] = useTexture([\n    ao,\n    baseColor,\n    displacement,\n    metal,\n    normal,\n    opacity,\n    roughness,\n  ]);\n\n  useFrame((state, delta) => {\n    if (!pedro.current) {\n      return;\n    }\n\n    for (let i = 1; i <= 9; i++) {\n      eval(`arch${i}.current.rotation.z += 0.00${i};`);\n      eval(\n        `arch${i}.current.rotation.z > Math.PI*2 && (arch${i}.current.rotation.z = 0);`\n      );\n      eval(`ball${i}.current.rotation.y += 0.0${i};`);\n      eval(`ball${i}.current.rotation.x += 0.00${i};`);\n    }\n    arches.current.position.z = pedro.current.position.z + TERRAIN_SIZE - 100;\n  });\n\n  let arch_array = [];\n  for (let i = 1; i <= 9; i++) {\n    arch_array.push(\n      <group ref={eval(`arch${i}`)} key={i}>\n        <mesh position={[0, 0, -900 - i * 100]} rotation={[0, 0, Math.PI - i]}>\n          <torusBufferGeometry args={[260, 10, 1, 40]} />\n          <meshBasicMaterial fog={false} attach=\"material\" color={0xffffff} />\n        </mesh>\n        <mesh ref={eval(`ball${i}`)} position={[0, 260, -900 - i * 100]}>\n          <sphereGeometry attach=\"geometry\" args={[30, 30, 30]} />\n          {/* <meshBasicMaterial fog={false} attach=\"material\" color={0xffffff} /> */}\n          <meshStandardMaterial\n            aoMap={aoMap}\n            map={baseColorMap}\n            displacementMap={displacementMap}\n            metalnessMap={metalMap}\n            normalMap={normalMap}\n            roughnessMap={roughnessMap}\n            alphaMap={opacityMap}\n            alphaTest={0.05}\n            emissiveIntensity={0.05}\n            emissive={ORB_EMISSION_COLOR}\n            emissiveMap={opacityMap}\n          />\n        </mesh>\n\n        <mesh ref={eval(`orb${i}`)} position={[0, 260, -900 - i * 100]}>\n          <sphereBufferGeometry attach=\"geometry\" args={[20, 20, 20]} />\n          <meshStandardMaterial\n            emissiveIntensity={10}\n            emissiveMap={metalMap}\n            emissive={ORB_EMISSION_COLOR}\n          />\n        </mesh>\n      </group>\n    );\n  }\n\n  return (\n    <>\n      <group ref={arches}>{arch_array}</group>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Metal_Mesh_008_ambientOcclusion.18818632.jpg\";","export default __webpack_public_path__ + \"static/media/Metal_Mesh_008_basecolor.8134974b.jpg\";","export default __webpack_public_path__ + \"static/media/Metal_Mesh_008_height.d759894b.png\";","export default __webpack_public_path__ + \"static/media/Metal_Mesh_008_metallic.50addf71.jpg\";","export default __webpack_public_path__ + \"static/media/Metal_Mesh_008_normal.b9b50128.jpg\";","export default __webpack_public_path__ + \"static/media/Metal_Mesh_008_opacity.7ae65765.jpg\";","export default __webpack_public_path__ + \"static/media/Metal_Mesh_008_roughness.d73c4889.jpg\";","import {\n  Bloom,\n  EffectComposer,\n  DepthOfField,\n  Noise,\n  Vignette,\n} from \"@react-three/postprocessing\";\n\nconst PostProcessing = () => {\n  return (\n    <EffectComposer>\n      <DepthOfField\n        focusDistance={0}\n        focalLength={3}\n        bokehScale={2}\n        height={480}\n      />\n      <Bloom luminanceThreshold={0.85} />\n      <Noise opacity={0.02} />\n      <Vignette eskil={false} offset={0.1} darkness={1.1} />\n    </EffectComposer>\n  );\n};\n\nexport default PostProcessing;\n","import { addEffect } from \"@react-three/fiber\";\nimport { useEffect, useRef } from \"react\";\nimport \"../../styles/hud.css\";\nimport { data } from \"../../zustand/zStore\";\n\ninterface HUD_Props {\n  gameStarted: boolean;\n}\n\nconst retrievePoints = () => data.points;\nconst retrieveVelocity = () => data.velocity;\nconst retrieveLevel = () => data.level;\n\nexport function HUD({ gameStarted }: HUD_Props) {\n  const point_ref = useRef<HTMLDivElement>(null);\n  const velocity_ref = useRef<HTMLDivElement>(null);\n  const level_ref = useRef<HTMLDivElement>(null!);\n  let currentPoints = retrievePoints();\n  let currentVelocity = retrieveVelocity();\n  let currentLevel = retrieveLevel();\n\n  //addEffect from fiber -- Adds a global callback which is called each frame\n  useEffect(() =>\n    addEffect(() => {\n      //UPDATES ARE BEING MADE ONLY WHEN CHANGES ARE BEING DETECTED\n      if (point_ref.current && velocity_ref.current) {\n        point_ref.current.innerHTML !==\n          retrievePoints().toFixed(0).toString() &&\n          (point_ref.current.innerText = retrievePoints()\n            .toFixed(0)\n            .toString());\n\n        velocity_ref.current.innerText !== retrieveVelocity().toString() &&\n          (velocity_ref.current.innerText = retrieveVelocity()\n            .toString()\n            .substr(0, 5));\n      }\n\n      level_ref.current.innerText !== retrieveLevel().toString() &&\n        (level_ref.current.innerText = retrieveLevel().toString());\n    })\n  );\n\n  return (\n    <div className={gameStarted ? \"hud_container show\" : \"hud_container\"}>\n      <div>\n        points:\n        <span ref={point_ref}>{currentPoints}</span>\n      </div>\n      <div className=\"current_level\">\n        Level:\n        <span ref={level_ref}>{currentLevel}</span>\n      </div>\n\n      <div className=\"hud_velocity\">\n        cosmic speed: <span ref={velocity_ref}>{currentVelocity}</span>\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/pedro.610c298e.png\";","import {\n  GAME_NAME,\n  GAME_SPEED_START,\n  MAIN_MENU_BACKGROUND_COLOR,\n} from \"../../app_config\";\nimport \"../../styles/menu.css\";\nimport logo from \"../../images/pedro.png\";\nimport { data, useStore } from \"../../zustand/zStore\";\n\ninterface MenuProps {\n  gameStarted: boolean;\n  gameLoaded: boolean;\n}\n\nexport function Menu({ gameStarted, gameLoaded }: MenuProps) {\n  const gameOver = useStore((state) => state.gameOver);\n  const pedro = useStore((state) => state.pedro);\n  const camera = useStore((state) => state.camera);\n\n  const tequila = useStore((s) => s.tequila);\n  const music = useStore((s) => s.music);\n  const setMusic = useStore((s) => s.setMusic);\n  const setTequila = useStore((s) => s.setTequila);\n  const setGameStarted = useStore((s) => s.setGameStarted);\n  const setGameOver = useStore((s) => s.setGameOver);\n\n  return (\n    <div\n      className={gameLoaded && !gameStarted ? `main_menu show ` : \"main_menu\"}\n      style={{\n        background: MAIN_MENU_BACKGROUND_COLOR,\n      }}\n    >\n      <div\n        className={\n          gameLoaded && !gameStarted\n            ? `column_container`\n            : \"column_container block_all\"\n        }\n      >\n        <div className=\"name_game \">{GAME_NAME}</div>\n        <img alt=\"logo for the game\" className=\"logo \" src={logo} />\n\n        <>\n          {gameOver ? (\n            <button\n              onClick={() => {\n                setGameStarted(true);\n                pedro.current.position.set(0, 0, 0);\n                data.gameSpeed = GAME_SPEED_START;\n                data.level = 1;\n                camera.current.rotation.y = 0;\n                setGameOver(false);\n              }}\n              className={\"play_button\"}\n            >\n              RESTART\n            </button>\n          ) : (\n            <button\n              onClick={() => {\n                setGameStarted(true);\n                data.gameSpeed = GAME_SPEED_START;\n                camera.current.rotation.y = 0;\n              }}\n              className={\"play_button\"}\n            >\n              PLAY\n            </button>\n          )}\n\n          <label className={tequila ? \"teq_label shake\" : \"teq_label\"}>\n            <input type=\"checkbox\" onClick={() => setTequila(!tequila)}></input>\n            I want tequila!\n          </label>\n          <label className={\"teq_label\"}>\n            <input type=\"checkbox\" onClick={() => setMusic(!music)}></input>I\n            want music!\n          </label>\n        </>\n      </div>\n    </div>\n  );\n}\n","import { useStore } from \"../../zustand/zStore\";\nimport { HUD } from \"./HUD\";\nimport { Menu } from \"./Menu\";\n\nexport function Dom() {\n  const gameStarted = useStore((s) => s.gameStarted);\n  const gameLoaded = useStore((s) => s.loaded);\n\n  return (\n    <>\n      <div className=\"wtf\">\n        <Menu gameStarted={gameStarted} gameLoaded={gameLoaded} />\n        <HUD gameStarted={gameStarted} />\n      </div>\n    </>\n  );\n}\n","import { useEffect } from \"react\";\n\nexport default function useKey(\n  button: string[] | string,\n  stateDispatch: (bool: boolean) => void\n) {\n  const pressed: any = [];\n  useEffect(() => {\n    const _onKeyDown = (e: KeyboardEvent) => {\n      if (button.indexOf(e.key) > -1) {\n        const isHeld = !!pressed[e.code]; //cast as boolean\n        pressed[e.code] = true;\n        if (!isHeld) stateDispatch(true);\n      }\n    };\n    const _onKeyUp = (e: KeyboardEvent) => {\n      if (button.indexOf(e.key) > -1) {\n        pressed[e.code] = false;\n        stateDispatch(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", _onKeyDown, { passive: true });\n    window.addEventListener(\"keyup\", _onKeyUp, { passive: true });\n    return () => {\n      window.removeEventListener(\"keydown\", _onKeyDown);\n      window.removeEventListener(\"keyup\", _onKeyUp);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [button, stateDispatch]);\n}\n","import {\n  CONTROL_LEFT,\n  CONTROL_RIGHT,\n  CONTROL_SPEED_UP,\n} from \"../app_config/index\";\nimport { useStore } from \"../zustand/zStore\";\nimport useKey from \"./hooks/useKey\";\n\nexport function Controls() {\n  const dispatch = useStore((state) => state.set);\n  useKey(CONTROL_LEFT, (bool: boolean) =>\n    dispatch((state: any) => ({\n      ...state,\n      keyPressed: { ...state.keyPressed, left: bool },\n    }))\n  );\n  useKey(CONTROL_RIGHT, (bool: boolean) =>\n    dispatch((state: any) => ({\n      ...state,\n      keyPressed: { ...state.keyPressed, right: bool },\n    }))\n  );\n  useKey(CONTROL_SPEED_UP, (bool: boolean) =>\n    dispatch((state: any) => ({\n      ...state,\n      keyPressed: { ...state.keyPressed, up: bool },\n    }))\n  );\n\n  return null;\n}\n","import { useFrame } from \"@react-three/fiber\";\nimport { useRef } from \"react\";\nimport { MIST_COLOR } from \"../app_config\";\n\nexport const Mist = () => {\n  const mist = useRef<any>(null!);\n\n  useFrame(() => {\n    mist.current.near = 100;\n    mist.current.far = 1800;\n    mist.current.color = MIST_COLOR;\n  });\n\n  return <fog ref={mist} attach=\"fog\" />;\n};\n","export default __webpack_public_path__ + \"static/media/floor.dcf48d1e.png\";","export default __webpack_public_path__ + \"static/media/floor_emissive_map.de48413b.png\";","import { useFrame } from \"@react-three/fiber\";\nimport React, { useLayoutEffect, useRef, useState } from \"react\";\nimport {\n  GAME_SPEED_LEVEL_UP,\n  TERRAIN_COLOR,\n  TERRAIN_EMISSIVE_COLOR,\n  TERRAIN_SIZE,\n  TEXTURE_SIZE,\n} from \"../app_config\";\nimport { data, useStore } from \"../zustand/zStore\";\nimport floor from \"../textures/floor/floor.png\";\nimport floor_emissive from \"../textures/floor/floor_emissive_map.png\";\nimport { useTexture } from \"@react-three/drei\";\nimport { RepeatWrapping } from \"three\";\n\nexport function TerrainModel() {\n  const g_one = useRef<THREE.Mesh>(null);\n  const g_two = useRef<THREE.Mesh>(null);\n  const terrain = useRef<THREE.Mesh>(null);\n  const terrain_secondary = useRef<THREE.Mesh>(null);\n\n  const [intensity, setIntensity] = useState<number>(0);\n\n  const pedro = useStore((state) => state.pedro);\n  const gameOver = useStore((s) => s.gameOver);\n\n  const texture = useTexture(floor);\n  const texture_emissive_map = useTexture(floor_emissive);\n\n  useLayoutEffect(() => {\n    texture.wrapS = texture.wrapT = RepeatWrapping;\n    texture.repeat.set(TEXTURE_SIZE, TEXTURE_SIZE);\n    texture.anisotropy = 16;\n\n    texture_emissive_map.wrapS = texture_emissive_map.wrapT = RepeatWrapping;\n    texture_emissive_map.repeat.set(TEXTURE_SIZE, TEXTURE_SIZE);\n    texture_emissive_map.anisotropy = 16;\n  }, [texture, texture_emissive_map]);\n\n  const terrainCounter = useRef(1); // indicates which terrain number it is\n  const lastTerrain = useRef(0); // indicates which terrain number it was\n\n  useFrame((state, delta) => {\n    if (gameOver) {\n      terrainCounter.current = 1;\n      lastTerrain.current = 0;\n    }\n    const setTerrainIntoNewPosition = (terrain_ref: any) => {\n      terrain_ref!.current.position.z -= TERRAIN_SIZE * 2;\n      lastTerrain.current = terrain_ref!.current.position.z;\n    };\n\n    if (!pedro.current) return;\n\n    if (\n      Math.round(pedro.current.position.z) +\n        TERRAIN_SIZE * terrainCounter.current -\n        10 >\n      -10\n    ) {\n      return; //shorting here to prevent terrain from being created\n    }\n\n    if (terrainCounter.current > 0) {\n      terrainCounter.current % 2 === 0 && setIntensity(intensity + 0.1);\n\n      terrainCounter.current % 2 === 0\n        ? setTerrainIntoNewPosition(g_two)\n        : setTerrainIntoNewPosition(g_one);\n      terrainCounter.current++;\n      terrainCounter.current % 2 === 0 &&\n        (data.gameSpeed += GAME_SPEED_LEVEL_UP);\n      terrainCounter.current % 2 === 0 && (data.level += 1);\n    }\n  });\n\n  return (\n    <>\n      <group ref={g_one} position={[0, -5, -TERRAIN_SIZE / 2]}>\n        <mesh visible={true} rotation={[-Math.PI / 2, 0, 0]} ref={terrain}>\n          <planeBufferGeometry\n            attach=\"geometry\"\n            args={[TERRAIN_SIZE, TERRAIN_SIZE, 1, 1]}\n          />\n          <meshStandardMaterial\n            color={TERRAIN_COLOR}\n            emissiveMap={texture_emissive_map}\n            emissive={TERRAIN_EMISSIVE_COLOR}\n            emissiveIntensity={intensity}\n            attach=\"material\"\n            map={texture}\n            roughness={0}\n            metalness={0.5}\n          />\n        </mesh>\n      </group>\n      <group ref={g_two} position={[0, -5, -TERRAIN_SIZE - TERRAIN_SIZE / 2]}>\n        <mesh\n          visible={true}\n          rotation={[-Math.PI / 2, 0, 0]}\n          ref={terrain_secondary}\n        >\n          <planeBufferGeometry\n            attach=\"geometry\"\n            args={[TERRAIN_SIZE, TERRAIN_SIZE, 1, 1]}\n          />\n          <meshStandardMaterial\n            color={TERRAIN_COLOR}\n            emissiveMap={texture_emissive_map}\n            emissive={TERRAIN_EMISSIVE_COLOR}\n            emissiveIntensity={intensity}\n            attach=\"material\"\n            map={texture}\n            roughness={0}\n            metalness={0.5}\n          />\n        </mesh>\n      </group>\n    </>\n  );\n}\n\nexport default function Terrain() {\n  return (\n    <>\n      <TerrainModel />\n    </>\n  );\n}\n","import { HERO_TURNING_RATE } from \"../../app_config\";\n\nexport const log = (message: any, message_two?: any) => {\n  message_two\n    ? console.log(\n        `%c ${message}: %c ${message_two}:`,\n        `color:white`,\n        `color:green`\n      )\n    : console.log(`%c ${message}:`, `color:yellow`);\n};\n\nexport const lockCamera = (\n  camera: React.RefObject<any>,\n  object: React.RefObject<any>\n) => {\n  camera.current.position.x = object.current.position.x;\n  camera.current.position.z = object.current.position.z + 4;\n  camera.current.position.y = object.current.position.y + 2.4;\n};\n\nexport const PIchecker = (current_value: number) => {\n  if (Math.abs(Math.PI - current_value) < 0.1) {\n    return true;\n  }\n};\n\nexport const randomWithinRange = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) - max;\n};\n\nexport const getDistance = (x1: number, y1: number, x2: number, y2: number) => {\n  let a = x2 - x1;\n  let b = y2 - y1;\n\n  return Math.sqrt(a * a + b * b);\n};\n\nexport const limitTurningAngle = (current_value: number) => {\n  if (current_value > Math.PI + HERO_TURNING_RATE) {\n    return Math.PI + HERO_TURNING_RATE;\n  }\n  if (current_value < Math.PI - HERO_TURNING_RATE) {\n    return Math.PI - HERO_TURNING_RATE;\n  }\n  if (\n    current_value > Math.PI - HERO_TURNING_RATE &&\n    current_value < Math.PI + HERO_TURNING_RATE\n  ) {\n    return current_value;\n  }\n};\n\n//END\n","import { useEffect, useLayoutEffect, useRef } from \"react\";\nimport { useGLTF, useAnimations, PerspectiveCamera } from \"@react-three/drei\";\nimport { useStore, data } from \"../zustand/zStore\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { limitTurningAngle, lockCamera, PIchecker } from \"./functions\";\nimport {\n  GAME_SPEED_BASE,\n  HUD_UPDATE_RATE,\n  OBJECT_TURN_RATE,\n  CORRECTIONAL_DELTA,\n} from \"../app_config\";\n\nfunction Model() {\n  const { nodes, materials, animations } = useGLTF(\n    \"./models/pedro.glb\"\n  ) as DreiGLTF;\n\n  const pedro = useStore((s) => s.pedro);\n  const camera = useStore((s) => s.camera);\n  const controls = useRef<any>(useStore.getState().keyPressed);\n\n  const gameStarted = useStore((s) => s.gameStarted);\n\n  //why deprecated?\n  useEffect(() => {\n    useStore.subscribe(\n      (c) => (controls.current = c),\n      (state) => state.keyPressed\n    );\n  });\n\n  const { actions } = useAnimations(animations, pedro);\n\n  // Camera mod\n  useLayoutEffect(() => {\n    camera.current.position.set(0, -3.6, -0.3);\n  }, [camera]);\n\n  //rotate pedro before rendering\n  useLayoutEffect(() => {\n    pedro.current.rotation.y = Math.PI;\n  });\n\n  // points and velocity sent to store, roughly every second or so\n  let timer = 0;\n  useFrame((state, delta) => {\n    const new_timer = state.clock.getElapsedTime();\n    if (!pedro.current) {\n      return;\n    }\n\n    if (camera.current.rotation.y !== 0 && gameStarted) {\n      camera.current.rotation.y = 0;\n    } //making sure camera is always pointing to the right direction\n    //measuring time in between to not abuse update\n    if (new_timer - timer > HUD_UPDATE_RATE) {\n      data.points = Math.round(Math.abs(pedro.current.position.z)) / 10;\n      timer = new_timer;\n      data.velocity = Math.round(data.gameSpeed * GAME_SPEED_BASE);\n    }\n  });\n\n  useFrame((state, delta) => {\n    if (!gameStarted) {\n      return null;\n    }\n    const new_delta = delta * CORRECTIONAL_DELTA;\n    pedro.current.position.z -= Math.sqrt(\n      data.gameSpeed * delta * GAME_SPEED_BASE\n    ); //players speed\n\n    pedro.current.position.x += data.xy * delta * GAME_SPEED_BASE; //x transform rate\n    const { left, right, up } = controls.current;\n\n    pedro.current.rotation.z = data.xy * 0.01; //when turning player slightly nods\n\n    //to the left pressed\n    if (left && !right) {\n      data.xy = Math.min(0.2, data.xy - new_delta);\n      pedro.current.rotation.y = limitTurningAngle(\n        pedro.current.rotation.y - (data.xy * OBJECT_TURN_RATE) / 100\n      );\n    }\n\n    //to the right pressed\n    if (!left && right) {\n      data.xy = Math.max(-0.2, data.xy + new_delta);\n      pedro.current.rotation.y = limitTurningAngle(\n        pedro.current.rotation.y - (data.xy * OBJECT_TURN_RATE) / 100\n      );\n    }\n\n    //left and right are being pressed or NOTpressed at the same time\n    if ((left && right) || (!left && !right)) {\n      if (data.xy < 0) {\n        data.xy + new_delta > 0 ? (data.xy = 0) : (data.xy += new_delta);\n      }\n      if (data.xy > 0) {\n        data.xy - new_delta < 0 ? (data.xy = 0) : (data.xy -= new_delta);\n      }\n\n      if (pedro.current.rotation.y !== Math.PI) {\n        pedro.current.rotation.y > Math.PI\n          ? (pedro.current.rotation.y -= new_delta)\n          : (pedro.current.rotation.y += new_delta);\n      }\n      //if current Y coord is really close to PI set it to PI\n      PIchecker(pedro.current.rotation.y) &&\n        (pedro.current.rotation.y = Math.PI);\n    }\n\n    //speed booster\n    if (up) {\n      pedro.current.position.z -= Math.sqrt(data.level);\n      let vel = (data.gameSpeed * delta * GAME_SPEED_BASE)\n        .toString()\n        .split(\".\")[1];\n      data.velocity = parseInt(vel);\n\n      !actions.animeRun?.isRunning() &&\n        actions.animeRun?.play() &&\n        actions.run?.stop();\n    }\n\n    //animate when up is not pressed\n    if (!up && actions.animeRun?.isRunning()) {\n      actions.animeRun?.stop();\n      actions.animeRun?.reset();\n      actions.run?.play();\n    }\n\n    //make idling stop when player starts running\n    if (gameStarted && data.points < 1) {\n      actions?.idle!.stop();\n      actions?.run!.play();\n    } //animeRun; idle; jump, run\n\n    lockCamera(camera, pedro);\n  });\n\n  useLayoutEffect(() => {\n    if (!gameStarted) {\n      lockCamera(camera, pedro);\n      actions.idle?.play();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [actions]);\n\n  return (\n    <>\n      <PerspectiveCamera\n        makeDefault\n        ref={camera}\n        fov={80}\n        position={[0, 2.4, 4]}\n      />\n\n      <group ref={pedro} dispose={null} position={[0, -3.6, 0]}>\n        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>\n          <primitive object={nodes.mixamorigHips} />\n          <skinnedMesh\n            geometry={nodes.Ch43.geometry}\n            material={materials.Ch43_Body}\n            skeleton={(nodes as any).Ch43.skeleton} //quickest solution\n          />\n        </group>\n      </group>\n    </>\n  );\n}\n\nuseGLTF.preload(\"./models/pedro.glb\");\n\nexport default function Pedro() {\n  return <Model></Model>;\n}\n","import { Cone } from \"@react-three/drei\";\nimport { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\n\nimport { useStore } from \"../zustand/zStore\";\nimport {\n  TERRAIN_SIZE,\n  LEFT_WALL,\n  RIGHT_WALL,\n  WALL_RADIUS,\n  WALL_COLOR,\n} from \"../app_config\";\n\nexport default function Walls() {\n  const pedro = useStore((s) => s.pedro);\n  const gameOver = useStore((s) => s.setGameOver);\n  const gameStarted = useStore((s) => s.setGameStarted);\n  const rightWall = useRef<THREE.Mesh>(null!);\n  const leftWall = useRef<THREE.Mesh>(null!);\n\n  useFrame((state, delta) => {\n    if (!pedro.current) {\n      return;\n    }\n\n    rightWall.current!.position.z = pedro.current.position.z;\n    leftWall.current!.position.z = pedro.current.position.z;\n\n    //\n    if (\n      leftWall.current!.position.x + WALL_RADIUS / 2 >\n        pedro.current.position.x ||\n      rightWall.current!.position.x - WALL_RADIUS / 2 < pedro.current.position.x\n    ) {\n      gameOver(true);\n      gameStarted(false);\n    }\n  });\n\n  return (\n    <>\n      <Cone\n        args={[WALL_RADIUS, TERRAIN_SIZE * 2, 8]}\n        ref={leftWall}\n        position={[LEFT_WALL, -10, 0]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      >\n        <meshStandardMaterial attach=\"material\" color={WALL_COLOR} />\n      </Cone>\n      <Cone\n        args={[WALL_RADIUS, TERRAIN_SIZE * 2, 8]}\n        ref={rightWall}\n        position={[RIGHT_WALL, -10, 0]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      >\n        <meshStandardMaterial attach=\"material\" color={WALL_COLOR} />\n      </Cone>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/color.d48938a2.jpg\";","export default __webpack_public_path__ + \"static/media/roughness.9c582ed5.jpg\";","export default __webpack_public_path__ + \"static/media/clouds.167c28d0.jpg\";","export default __webpack_public_path__ + \"static/media/cloud_displacement.3c1d5aa2.jpg\";","import { useStore } from \"../zustand/zStore\";\nimport { useMemo, useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { EARTH_EMISSION_COLOR, TERRAIN_SIZE } from \"../app_config\";\nimport { useTexture } from \"@react-three/drei\";\nimport { DoubleSide } from \"three\";\nimport color from \"../textures/earth/color.jpg\";\nimport displacement from \"../textures/earth/roughness.jpg\";\nimport clouds_color from \"../textures/earth/clouds.jpg\";\nimport clouds_displacement from \"../textures/earth/cloud_displacement.jpg\";\n\nexport function Earth() {\n  const star = useStore((s) => s.star);\n  const pedro = useStore((s) => s.pedro);\n  const clouds = useRef<any>();\n  const [color_map, displacement_map, c_color, c_displacement] = useTexture([\n    color,\n    displacement,\n    clouds_color,\n    clouds_displacement,\n  ]);\n\n  const earth_color = useMemo(() => EARTH_EMISSION_COLOR, []);\n\n  useFrame((state, delta) => {\n    if (pedro.current) {\n      star.current!.position.z = pedro.current!.position.z - TERRAIN_SIZE - 300;\n      star.current!.position.x = 0; //pedro.current!.position.x; //TO move star with pedro\n    }\n\n    star.current!.rotation.y += delta * 0.1;\n    star.current!.rotation.x += delta * 0.2;\n    clouds.current!.rotation.y -= delta * 0.1;\n  });\n\n  return (\n    <group ref={star} position={[0, 0, -TERRAIN_SIZE]} rotation={[0.5, 5, 0]}>\n      <mesh>\n        <sphereGeometry attach=\"geometry\" args={[350, 40, 40]} />\n        <meshPhongMaterial\n          attach=\"material\"\n          emissive={earth_color}\n          emissiveIntensity={0.1}\n          map={color_map}\n          displacementMap={displacement_map}\n          displacementScale={2}\n          reflectivity={0}\n          emissiveMap={displacement_map}\n        />\n      </mesh>\n      <mesh ref={clouds}>\n        <sphereGeometry attach=\"geometry\" args={[360, 40, 40]} />\n        <meshPhongMaterial\n          attach=\"material\"\n          map={c_color}\n          depthWrite={true}\n          alphaMap={c_color}\n          alphaTest={0.5}\n          opacity={0.8}\n          transparent={true}\n          side={DoubleSide}\n        />\n      </mesh>\n    </group>\n  );\n}\n","import { Stars } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useRef } from \"react\";\nimport { data, useStore } from \"../zustand/zStore\";\n\nexport function Dots() {\n  const dots = useRef<any>();\n\n  const pedro = useStore((state) => state.pedro);\n\n  useFrame((state, delta) => {\n    dots.current!.rotation.z += delta * 0.02 * data.gameSpeed;\n    if (!pedro.current) {\n      return;\n    }\n    dots.current.position.x = 0;\n    dots.current.position.z = pedro.current.position.z;\n  });\n  return (\n    <>\n      <Stars\n        ref={dots}\n        radius={400}\n        depth={200}\n        count={20000}\n        factor={30}\n        saturation={0.5}\n        fade={true}\n      />\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/secret.88f0ee7e.png\";","export default __webpack_public_path__ + \"static/media/json.3e62ed12.png\";","import { useFrame } from \"@react-three/fiber\";\nimport { useRef, useMemo, useLayoutEffect } from \"react\";\nimport { Object3D, RepeatWrapping } from \"three\";\nimport {\n  FREE_REAL_ESTATE,\n  LEFT_WALL,\n  OBSTACLES_HEIGHT,\n  OBSTACLES_QT,\n  OBSTACLE_EMISSIVE_COLOR,\n  RIGHT_WALL,\n  TERRAIN_SIZE,\n  WALL_RADIUS,\n} from \"../app_config\";\nimport { useStore } from \"../zustand/zStore\";\nimport { getDistance, randomWithinRange } from \"./functions\";\nimport secret_map from \"../textures/obstacles/secret.png\";\nimport earth from \"../textures/obstacles/json.png\";\nimport { useTexture } from \"@react-three/drei\";\n\nexport function Obstacles() {\n  const texture_map = useTexture(secret_map);\n  const texture = useTexture(earth);\n  const obstacle_ref = useRef<any>(null);\n  const material_ref = useRef<THREE.MeshBasicMaterial>(null);\n  const gameOver_flag = useStore((s) => s.gameOver);\n  const gameOver = useStore((s) => s.setGameOver);\n  const gameStarted = useStore((s) => s.setGameStarted);\n\n  const pedro = useStore((state) => state.pedro);\n  const loaded = useStore((s) => s.loaded);\n\n  const obstacle3D = useMemo(() => new Object3D(), []);\n\n  const obstacles = useMemo(() => {\n    if (!loaded) return [{ x: 0, y: 0, z: 0, rotate: 2.6 }]; //render only when loaded, otherwise why abuse Suspend?\n    const obstacle_coords_bank = [];\n    if (!gameOver_flag) {\n      for (let index = 0; index < OBSTACLES_QT; index++) {\n        // putting obstacles CLOSE to walls\n        const x = randomWithinRange(\n          LEFT_WALL + WALL_RADIUS / 2,\n          RIGHT_WALL - WALL_RADIUS / 2\n        );\n        const y = 0;\n        const z = -FREE_REAL_ESTATE + randomWithinRange(-400, 400); //steps between obstacles\n\n        const rotate = randomWithinRange(-2.6, 2.6);\n\n        obstacle_coords_bank.push({ x, y, z, rotate });\n      }\n    }\n    return obstacle_coords_bank;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gameOver_flag]);\n\n  useFrame((state, delta) => {\n    if (!pedro.current) {\n      return;\n    }\n    obstacles.forEach((o, i) => {\n      //GAME OVER LOGIC HERE\n      if (o.z - pedro.current.position.z > -15) {\n        if (\n          o.x - pedro.current.position.x > -15 ||\n          o.x - pedro.current.position.x < 15\n        ) {\n          const distance_to_pedro = getDistance(\n            pedro.current.position.x,\n            pedro.current.position.z,\n            o.x,\n            o.z\n          );\n          if (distance_to_pedro < 11) {\n            gameOver(true);\n            gameStarted(false);\n          }\n          //game over action\n        }\n      }\n      //GAME OVER LOGIC ENDS HERE\n\n      //HERE I JUST RANDOMIZE ALREADY EXISTING COORDINATES\n      if (o.z - pedro.current.position.z > 15) {\n        o.z =\n          pedro.current.position.z -\n          TERRAIN_SIZE +\n          randomWithinRange(-400, 400); //variating obstacle z position\n        o.y = -OBSTACLES_HEIGHT; // PUTTING OBSTACLES UNDER THE TERRAIN\n        o.x = randomWithinRange(\n          LEFT_WALL + WALL_RADIUS / 2,\n          RIGHT_WALL - WALL_RADIUS / 2\n        ); // putting obstacles CLOSE to walls\n      }\n\n      // make OBSTACLES grow when in sight\n      if (o.y < OBSTACLES_HEIGHT / 2) {\n        o.y + delta * 100 > OBSTACLES_HEIGHT / 2\n          ? (o.y = OBSTACLES_HEIGHT / 2)\n          : (o.y += delta * 100);\n      }\n\n      obstacle3D.position.set(o.x, o.y, o.z);\n\n      obstacle3D.rotation.y = o.rotate;\n\n      obstacle3D.updateMatrix();\n\n      obstacle_ref.current.setMatrixAt(i, obstacle3D.matrix);\n    });\n    gameOver_flag\n      ? (obstacle_ref.current.position.y -= 0.1)\n      : (obstacle_ref.current.position.y = 0); //making obstacles drown slowly\n\n    obstacle_ref.current.instanceMatrix.needsUpdate = true;\n  });\n\n  useLayoutEffect(() => {\n    texture.wrapS = texture.wrapT = RepeatWrapping;\n    texture.repeat.set(1, 1);\n    texture.anisotropy = 16;\n  }, [texture]);\n\n  return (\n    <instancedMesh\n      ref={obstacle_ref}\n      args={[undefined, undefined, OBSTACLES_QT]}\n    >\n      <cylinderBufferGeometry\n        args={[\n          OBSTACLES_HEIGHT / 2,\n          OBSTACLES_HEIGHT / 2,\n          OBSTACLES_HEIGHT * 2,\n          32,\n        ]}\n      />\n\n      <meshStandardMaterial\n        ref={material_ref}\n        attach=\"material\"\n        emissive={OBSTACLE_EMISSIVE_COLOR}\n        emissiveIntensity={0.005}\n        emissiveMap={texture_map}\n        map={texture}\n        roughnessMap={texture}\n        color=\"white\"\n        wireframe={gameOver_flag ? true : false}\n      />\n    </instancedMesh>\n  );\n}\n","import { Html, useProgress } from \"@react-three/drei\";\nimport { useStore } from \"../zustand/zStore\";\nimport \"../styles/fallback_loader.css\";\nimport { useEffect } from \"react\";\n\nexport function GameLoader() {\n  const l = [\"l\", \"o\", \"a\", \"d\", \"i\", \"n\", \"g\"];\n  const { progress, item } = useProgress();\n  const setLoaded = useStore((s) => s.setLoaded);\n\n  useEffect(() => {\n    progress >= 100 && setLoaded(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [progress]);\n\n  return (\n    <Html>\n      <section className=\"section_fallback\">\n        <h1 className=\"fallback\">\n          {progress.toFixed(1)}%{\"   \"}\n          {l.map((letter, i) => (\n            <span key={i} className={\"fallback loader\" + i}>\n              {letter}\n            </span>\n          ))}\n        </h1>\n        <div className=\"fallback\">\n          now loading <span className=\"item\">{item}</span>\n        </div>\n      </section>\n    </Html>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/crispy.53707b08.mp3\";","export default __webpack_public_path__ + \"static/media/oh_no_sound.7f98d71b.mp3\";","export default __webpack_public_path__ + \"static/media/level_up.35396ec3.mp3\";","export default __webpack_public_path__ + \"static/media/THE_END.fa525c2b.wav\";","import { useFrame, useLoader } from \"@react-three/fiber\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { AudioAnalyser, AudioListener, AudioLoader } from \"three\";\nimport { useStore, data } from \"../zustand/zStore\";\n\n//sounds\nimport crispy from \"../audio/crispy.mp3\";\n//import crispy from \"../audio/Blob-Monsters-on-the-Loose.mp3\";\nimport oh_no_sound from \"../audio/oh_no_sound.mp3\";\nimport level_up_sound from \"../audio/level_up.mp3\";\n// import fantasy_sound from \"../audio/FANTASY.wav\";\nimport THE_END from \"../audio/THE_END.wav\";\n\nexport default function Music() {\n  let level = data.level;\n  const music_analyzer = useRef();\n\n  const music_player = useRef();\n  const game_over_player = useRef();\n  const oh_no_player = useRef();\n  const level_up_player = useRef();\n\n  const music_bol = useStore((state) => state.music);\n  const gameStarted = useStore((state) => state.gameStarted);\n  const gameOver = useStore((state) => state.gameOver);\n\n  const [listener] = useState(() => new AudioListener());\n\n  const mainTheme = useLoader(AudioLoader, crispy);\n  const gameOverTheme = useLoader(AudioLoader, THE_END);\n  const ohNoTheme = useLoader(AudioLoader, oh_no_sound);\n  const levelUpTheme = useLoader(AudioLoader, level_up_sound);\n\n  useEffect(() => {\n    if (gameOver && music_bol && gameStarted) {\n      oh_no_player.current.setBuffer(ohNoTheme);\n      oh_no_player.current.setVolume(1.5);\n      oh_no_player.current.play();\n    }\n  });\n\n  useEffect(() => {\n    if (music_bol && gameStarted && !gameOver) {\n      music_player.current.setBuffer(mainTheme);\n      music_player.current.setLoop(true);\n      music_player.current.setVolume(1);\n      music_player.current.setPlaybackRate(1);\n      music_player.current.play();\n    } else {\n      music_player.current.isPlaying && music_player.current.stop();\n    }\n  }, [music_bol, mainTheme, gameStarted, gameOver]);\n\n  useEffect(() => {\n    music_analyzer.current = new AudioAnalyser(music_player.current, 32);\n  });\n\n  useEffect(() => {\n    if (gameOver && music_bol) {\n      game_over_player.current.setBuffer(gameOverTheme);\n      game_over_player.current.play();\n    } else {\n      game_over_player.current.isPlaying && game_over_player.current.stop();\n    }\n  }, [gameOver, music_bol, gameOverTheme]);\n\n  useFrame((state, delta) => {\n    // music_bol && console.log(music_analyzer.current.getFrequencyData()); //this is dope!!!!\n\n    let rate = 1 + data.level / 100;\n    //if rates differ, set new one\n    if (!music_player.current.playbackRate !== rate) {\n      music_player.current.setPlaybackRate(rate);\n    }\n\n    if (level !== data.level && music_bol) {\n      //without stop even if we change level every milisecond it will not play until its done with first loop\n      level_up_player.current.setBuffer(levelUpTheme);\n      if (level_up_player.current.isPlaying) {\n        level = data.level;\n        return;\n      }\n      level_up_player.current.setVolume(0.8);\n      level_up_player.current.play();\n      level = data.level;\n    }\n  });\n  return (\n    <group>\n      <audio ref={music_player} args={[listener]} />\n      <audio ref={game_over_player} args={[listener]} />\n      <audio ref={oh_no_player} args={[listener]} />\n      <audio ref={level_up_player} args={[listener]} />\n    </group>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/sky.a1930b14.jpg\";","import { useTexture } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { Suspense, useLayoutEffect, useRef } from \"react\";\nimport { MirroredRepeatWrapping, BackSide } from \"three\";\nimport sky_texture from \"../textures/sky.jpg\";\nimport { useStore } from \"../zustand/zStore\";\nimport {\n  SKY_MOVEMENT_RATE,\n  ENVIRONMENT_EMISSIVE_COLOR,\n  TERRAIN_SIZE,\n} from \"../app_config\";\n\nexport function Environment() {\n  return (\n    <Suspense fallback={null}>\n      <Sky />\n    </Suspense>\n  );\n}\n\nconst Sky = () => {\n  const texture = useTexture(sky_texture);\n  const sky = useRef<any>();\n\n  const pedro = useStore((p) => p.pedro);\n\n  useLayoutEffect(() => {\n    texture.wrapS = texture.wrapT = MirroredRepeatWrapping;\n    texture.repeat.set(2, 2);\n    texture.anisotropy = 16;\n  }, [texture]);\n\n  useFrame((state, delta) => {\n    sky.current.rotation.z -= (SKY_MOVEMENT_RATE / 100) * delta;\n    sky.current.rotation.y -= (SKY_MOVEMENT_RATE / 100) * delta;\n    sky.current.rotation.x += (SKY_MOVEMENT_RATE / 100) * delta;\n\n    if (pedro.current) {\n      sky.current.position.x = pedro.current.position.x;\n      sky.current.position.z = pedro.current.position.z - 450;\n    }\n  });\n\n  return (\n    <>\n      <mesh ref={sky} rotation={[0, 0, Math.PI]} position={[0, 0, 0]}>\n        <hemisphereLight intensity={0.1}></hemisphereLight>\n        <sphereGeometry\n          attach=\"geometry\"\n          args={[TERRAIN_SIZE * 1.2, 10, 10]}\n        ></sphereGeometry>\n        <meshPhongMaterial\n          emissive={ENVIRONMENT_EMISSIVE_COLOR}\n          emissiveIntensity={0.0001}\n          attach=\"material\"\n          map={texture}\n          side={BackSide}\n          transparent={false}\n        />\n      </mesh>\n    </>\n  );\n};\n","//imported components\nimport { Canvas } from \"@react-three/fiber\";\nimport { Suspense } from \"react\";\nimport { Stats, Preload, CameraShake } from \"@react-three/drei\";\n//import { Environment } from \"@react-three/drei\";\nimport PostProcessing from \"./c/PostProcessing\";\n\n//components\nimport { Dom } from \"./c/dom/Dom\";\nimport { Controls } from \"./c/Controls\";\nimport { Mist } from \"./c/Mist\";\nimport Terrain from \"./c/Terrain\";\nimport Pedro from \"./c/Pedro\";\nimport Walls from \"./c/Walls\";\nimport { Arch } from \"./c/Arch\";\nimport { Earth } from \"./c/Earth\";\nimport { Dots } from \"./c/Dots\";\nimport { Obstacles } from \"./c/Obstacles\";\nimport { GameLoader } from \"./c/GameLoader\";\nimport { useStore } from \"./zustand/zStore\";\nimport Music from \"./c/Music\";\nimport { Environment } from \"./c/Environment\"; // old environmental solution\n\nfunction App() {\n  const tequila = useStore((s) => s.tequila); //fetching tequila state/ a boolean that tells if we want to shake camera or not\n  const gameOver = useStore((s) => s.gameOver); // game over boolean\n  return (\n    <>\n      <Canvas\n        style={{ zIndex: 1 }}\n        gl={{ antialias: false, alpha: false }}\n        mode=\"concurrent\"\n        dpr={window.devicePixelRatio}\n      >\n        <Suspense fallback={<GameLoader />}>\n          <Music />\n          <ambientLight intensity={0.1} />\n          <directionalLight position={[0, 3, 3]} />\n          {gameOver ? <Mist /> : null}\n          <Stats />\n          {gameOver ? null : <Terrain />}\n          <Walls />\n          <Pedro />\n          <Obstacles />\n          <Earth />\n          <Dots />\n          <Arch />\n          <Environment />\n          {tequila ? <CameraShake intensity={1} /> : null}\n          <Preload all />\n          <PostProcessing />\n        </Suspense>\n      </Canvas>\n      <Dom />\n      <Controls />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { Color } from \"three\";\n\nexport const GAME_NAME = \"4RK YOURSELF\";\nexport const TERRAIN_SIZE = 1000; // lets pretend it is meters\nexport const TEXTURE_SIZE = TERRAIN_SIZE * 0.05; // lets pretend it is meters\nexport const LEFT_WALL = (-TERRAIN_SIZE / 2) * 0.5; // lets pretend it is meters\nexport const RIGHT_WALL = (TERRAIN_SIZE / 2) * 0.5; // lets pretend it is meters\nexport const WALL_RADIUS = 60; // lets pretend it is meters\nexport const GAME_SPEED_START = 1;\nexport const GAME_SPEED_LEVEL_UP = 0.2;\nexport const GAME_SPEED_BASE = 200;\nexport const SPEED_UP_BOOSTER = 1.5;\nexport const OBJECT_TURN_RATE = 1;\nexport const SKY_MOVEMENT_RATE = 1;\nexport const FREE_REAL_ESTATE = 600; //used in Obstacles useMemo hook to declare initial z coordinates. Does describe where obstacles start in the beginning\nexport const OBSTACLES_QT = 80; //qt per plain\nexport const OBSTACLES_HEIGHT = 20;\nexport const HUD_UPDATE_RATE = 0.5; // seconds\nexport const HERO_TURNING_RATE = 0.5; // number that +/- to PI\nexport const CORRECTIONAL_DELTA = 2; //value to determine how 'heavy' turning is\n\n//CONTROLS\nexport const CONTROL_LEFT = [\"ArrowLeft\", \"a\", \"A\"];\nexport const CONTROL_RIGHT = [\"ArrowRight\", \"d\", \"D\"];\nexport const CONTROL_SPEED_UP = [\"ArrowUp\", \"w\", \"W\"];\n\n//COLORS\nexport const MAIN_MENU_BACKGROUND_COLOR =\n  \"linear-gradient(3deg, rgba(0,0,0,1) 0%, rgba(154,122,246,0) 50%)\";\nexport const EARTH_EMISSION_COLOR = new Color(200, 200, 100);\nexport const ENVIRONMENT_EMISSIVE_COLOR = new Color(0, 0, 255); //the shitty one\nexport const MIST_COLOR = new Color(\"rgba(250, 0, 0, 0.1)\"); //rgb + transparency\nexport const OBSTACLE_EMISSIVE_COLOR = new Color(255, 215, 200);\nexport const TERRAIN_COLOR = new Color(`rgba(255, 255, 255,0.5)`);\nexport const TERRAIN_EMISSIVE_COLOR = new Color(`rgb(243, 0, 190)`);\nexport const WALL_COLOR = new Color(`rgb(220,10, 0)`);\nexport const ORB_EMISSION_COLOR = new Color(`rgb(255, 0, 0)`);\n"],"sourceRoot":""}